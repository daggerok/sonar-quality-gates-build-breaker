notifications:
  email: false
git:
  quiet: true
  depth: false
env:
  global:
  - TERM=dumb
  - secure: "N/BGrquqDPJvuuFF6vgxpx0hzNbMXgWsjLRvK/ZGr9nJskzRejiae94wTvWkxG96NhJXU9WRpTVLNps/yAN2Bzu5DCbFzoKfYIQP+hEestb/SqNLRzcuMFYnu7arBTraKufeSkEmCg4oGrde8VF3y4YOovC4OWAN9NzWTA8OwYOS6uNS4/KhEYIFxSM86apJp45vxYON0b1vqNSqbx7Fc1ZtBjrObUeYn/bYHXjcyBp+gC20u1NB1ZcX82CTHUZx4T5Y2DF2QRKnZsaKEwpA3LqOvrLvyftOVzYd5nwOapzn8llHjC164sk+XKpitzUdWCwcksOlRBZWpLjInbwGgmaj3k1SrGYPVnNTbfbXBvQjv+kzDBmetzf2kCwNgzw1VHs8HQQqtg+Pxya2/vWYS8Bw9F3JG4iCzWBJLcYO6Gpim7+9DKpsrUcdbIbJsTm/KjscrIUolPVqDCs+UI1LRkUbK9QegAvEUbpMPZpI5+9p43OFSx+s6CWNjzkPunutfWFk7hwNXu9d5LgOydolIVFQ6B+wdhI4X5wNoKWZpguFMblQfEOqNQo/vanABKLODEEJQTb3doBlFXclkVVCkVRqxvYckMv5tczhPS4VhIvy9WQLrY1Yzj8NuE7x+eiKnMex01WS0egc+MTlbx4+pk0Z6bBrkjceFBbXeJb3a+4="
  - secure: "OdrwHtckz6unLUcHGrtJ8ySMqlaEAqQBdjnrRjU68I0xMgO9uEV2aOZca6g/VbPJg3gZVbup7p20cWZPotbH+X+i0CbEnn+nnq1uxc1vdagXMBOf/oRKtIEPlfUB6FmO4//g10A6aFDD81FyxbUSq5PdH3kb9KYS6PKC1EjgPlFvxseA2gnxMQgtugW5IST1hczfruDpHX97QhIrT7UfV9y0hSYP5e11jiI9f/YBJyFRLcg38LZg5RPAtmtmSt1tcdEgp+xhYhGWGBBUyKVo8U8ru/+XY7c9JirrnIbgZu4Ybagt9Y0qMzME4pNIuB4gdAGe6Cn/QtkcfXgnddIIDiVa+pA0ix6Zkge2j01BYJM0HH+tNktRr+y1QOqEobCyt4tpGrFxakPIx/ssti8GjQFqDU3f8wVE0kjUd7tHsb6cVsjNkRfMKh6L5Ju5SaVkpiKHE4F560laBYAlnaVhBnA1pg50BziPSVIgLWwUuuGijFMH2KZJZif7hoa5zoTjIVQO0VsvKY5vgluU2PlcE088hKxQ/KYgBDm3iGTIJ8pYOQrcBCO0PAlGFsaT7O8RcerSXzy6ayuvuXaSMtzPVR/Lv4XCz+6vKAgNCG7WFHjW/Jf9hmqYzQ4MoB+5fO634iizxiSXs7pQNknvxg+RrVA+MOXXKPYFMby0/JleoCA="
  - secure: "rIwWxoiWIKX3QWonh4qUgDtl+eaW9Uax15qg0jQ2Vu0l2aD9d3yZRuRtlo1f9n0kwGKIIvs0TZl+wT1cN1d7ELxWO6/X9KLN0clOiHX4QIdmO6mQIxXAK3dBAxcaC6Or7MwRovQdnSrcm1TMyHFgbYmPW614zNNcHVID47uJ7+/8Tn9owPLdVJ4RT2S4Qy+j/egOZjcT+EFM/9I/ph96w2OlScGEYxn4CZyDO9YsAd0uxKFH6Xqpswo0ccQe5lK6hP8Q19/JTdTYicFtUQ2N/fQ5YEnQITv8HB5rfI4gSBSVx1bvpykKw6iuPL++st7k8rYaZHSfgHrEDUsDTTsyb6YpfnsNTbBz2aH18eE1E9MLUIT1OQsERusYAYOnHT4S5OI83icD5c8chIzGBzeBi8z0kwueeMSlKsr2rKYoUNioLL+YHEOzjVz7H1AP3D3BHSEd6XUrePVbvMD/ZcDY2k1y48A/QF8cHuZNaycVF3lOS/1aKk1okDPafsaVHglfsC353WWs28Cm5lkj3bctUnedQsZLVY74k7dd9YLwjpKIjmd3+sbD8yrlkvXpJoyz5DK/IlWMcrUEfy9R3fNudEdmQKAWHXfECRrpqxAgQqD/yexiVrP9rNrhsy5len1vHezxUmGaKxSoNdozoIZ04sNeoVhn+VLYaUp4zyPFtk4="
language: java
services: docker
addons:
  apt:
    update: true
    packages:
    - sudo
    - lsof
    - curl
    - pigz
    - docker-ce
install: true
before_install:
#- source <(curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash)
- |
  if [ ! -f $HOME/.local/daggerok/bash-functions/master/main.bash ] ; then
    mkdir -p $HOME/.local/daggerok/bash-functions/master ;
    curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash > $HOME/.local/daggerok/bash-functions/master/main.bash ;
  fi
  source $HOME/.local/daggerok/bash-functions/master/main.bash ;
- stop_any 80 8080 9000
#- docker-compose -v
- |
  if [[ ! -f $HOME/.local/bin/docker-compose ]] ; then
    rm -rf $HOME/.local/bin ;
    mkdir -p $HOME/.local/bin ;
    curl -L https://github.com/docker/compose/releases/download/1.25.0-rc2/docker-compose-`uname -s`-`uname -m` -o $HOME/.local/bin/docker-compose ;
    chmod +x $HOME/.local/bin/docker-compose
    export PATH=$HOME/.local/bin:$PATH
    docker-compose -v
  fi
#before_cache:
#- find ~/.gradle -name '*.lock' -type f             -print0 | xargs -0 sudo rm -rfv '{}'
#- find ~/.gradle -name 'plugin-resolution' -type d  -print0 | xargs -0 sudo rm -rfv '{}'
cache:
  pip: true
  packages: true
  directories:
  - ./target/node
  - ./docs/node_modules
  - ~/.local/daggerok
  - ~/.local/bin
  - ~/.docker
  - ~/.m2
jobs:
  include:
  - stage: test
    jdk: openjdk8
    name: test sonar-breaker-maven-plugin system properties openjdk8
    script:
    - cd $TRAVIS_BUILD_DIR && ./mvnw -pl :docker docker-compose:up
    - wait_healthy_docker_containers 1
    - echo wait a half of minute while sonarQube is selfconfiguring...
    - sleep 30s
    - cd $TRAVIS_BUILD_DIR && ./mvnw -P sonar -DskipTests
    - cd $TRAVIS_BUILD_DIR && ./mvnw -pl :sonar-breaker-maven-plugin-demo sonar-breaker:analyze -Dsonar.breaker.retry=1 -Dsonar.breaker.delay=0 || echo 'expected non zero error code...'
    after_script:
    - cd $TRAVIS_BUILD_DIR && ./mvnw -pl :docker docker-compose:down
  - stage: test
    jdk: openjdk11
    name: test env variables SONAR_BREAKER_RETRY openjdk11
    script:
    - cd $TRAVIS_BUILD_DIR && ./mvnw -pl :docker docker-compose:up
    - wait_healthy_docker_containers 1
    - echo wait a half of minute while sonarQube is selfconfiguring...
    - sleep 45s
    - cd $TRAVIS_BUILD_DIR && ./mvnw -P sonar -DskipTests
    # https://www.gnu.org/software/bash/manual/bash.html#The-Set-Builtin
    - SONAR_BREAKER_RETRY=1 java -jar $TRAVIS_BUILD_DIR/sonar-breaker/target/*-all.jar $TRAVIS_BUILD_DIR/target/sonar/report-task.txt || echo 'expected non zero error code...'
    after_script:
    - cd $TRAVIS_BUILD_DIR && ./mvnw -pl :docker docker-compose:down
  - stage: test
    jdk: openjdk8
    name: test sonar-breaker openjdk8
    script:
    - cd $TRAVIS_BUILD_DIR && ./mvnw -pl :docker docker-compose:up
    - wait_healthy_docker_containers 1
    - echo wait a half of minute while sonarQube is selfconfiguring...
    - sleep 30s
    - cd $TRAVIS_BUILD_DIR && ./mvnw -P sonar
    - java -jar $TRAVIS_BUILD_DIR/sonar-breaker/target/*-all.jar $TRAVIS_BUILD_DIR/target/sonar/report-task.txt
    after_script:
    - cd $TRAVIS_BUILD_DIR && ./mvnw -pl :docker docker-compose:down
  - stage: test
    jdk: openjdk11
    name: test sonar-breaker-maven-plugin openjdk11
    script:
    - cd $TRAVIS_BUILD_DIR && ./mvnw -pl :docker docker-compose:up
    - wait_healthy_docker_containers 1
    - echo wait a half of minute while sonarQube is selfconfiguring...
    - sleep 30s
    - cd $TRAVIS_BUILD_DIR && ./mvnw -P sonar -DskipTests
    - cd $TRAVIS_BUILD_DIR && ./mvnw -pl :sonar-breaker-maven-plugin-demo sonar-breaker:analyze
    after_script:
    - cd $TRAVIS_BUILD_DIR && ./mvnw -pl :docker docker-compose:down
  - stage: test
    jdk: openjdk8
    name: test sonar.breaker.retry openjdk8
    script:
    - cd $TRAVIS_BUILD_DIR && ./mvnw -pl :docker docker-compose:up
    - wait_healthy_docker_containers 1
    - echo wait a half of minute while sonarQube is selfconfiguring...
    - sleep 45s
    - cd $TRAVIS_BUILD_DIR && ./mvnw -P sonar -DskipTests
    # https://www.gnu.org/software/bash/manual/bash.html#The-Set-Builtin
    - java -Dsonar.breaker.retry=1 -jar $TRAVIS_BUILD_DIR/sonar-breaker/target/*-all.jar $TRAVIS_BUILD_DIR/target/sonar/report-task.txt || echo 'expected non zero error code...'
    after_script:
    - cd $TRAVIS_BUILD_DIR && ./mvnw -pl :docker docker-compose:down
  - stage: test
    jdk: openjdk11
    name: test sonar.breaker.delay openjdk11
    script:
    - cd $TRAVIS_BUILD_DIR && ./mvnw -pl :docker docker-compose:up
    - wait_healthy_docker_containers 1
    - echo wait a half of minute while sonarQube is selfconfiguring...
    - sleep 30s
    # https://www.gnu.org/software/bash/manual/bash.html#The-Set-Builtin
    - ./mvnw -P sonar -DskipTests ; java -Dsonar.breaker.delay=0 -Dsonar.breaker.retry=5 -jar ./sonar-breaker/target/*-all.jar ./target/sonar/report-task.txt || echo 'expected non zero error code...'
    after_script:
    - cd $TRAVIS_BUILD_DIR && ./mvnw -pl :docker docker-compose:down
  - stage: test
    jdk: openjdk8
    name: test local publish openjdk8
    script: cd $TRAVIS_BUILD_DIR && ./mvnw -P local-publish -U
  #  - stage: test
  #    jdk: openjdk8
  #    name: display-property-updates openjdk8
  #    script: cd $TRAVIS_BUILD_DIR && ./mvnw versions:display-property-updates -U
  #  - stage: test
  #    jdk: openjdk11
  #    name: display-property-updates openjdk11
  #    script: cd $TRAVIS_BUILD_DIR && ./mvnw versions:display-property-updates -U
  - stage: deploy
    jdk: openjdk8
    rvm: 2.6.4
    name: Deploy VuePress documentation on GitHub Pages openjdk8
    if: branch ~= /master/ AND (type NOT IN (pull_request))
    script: skip
    before_deploy:
    - echo '<?xml version="1.0" encoding="UTF-8" ?>                                                                             ' >> .mvn/settings.xml
    - echo '<settings xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd"' >> .mvn/settings.xml
    - echo '          xmlns="http://maven.apache.org/SETTINGS/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">     ' >> .mvn/settings.xml
    - echo '    <profiles><profile>                                                                                             ' >> .mvn/settings.xml
    - echo '      <repositories>                                                                                                ' >> .mvn/settings.xml
    - echo '        <repository>                                                                                                ' >> .mvn/settings.xml
    - echo '          <snapshots><enabled>false</enabled></snapshots>                                                           ' >> .mvn/settings.xml
    - echo '          <id>bintray-daggerok-daggerok</id>                                                                        ' >> .mvn/settings.xml
    - echo '          <name>bintray</name>                                                                                      ' >> .mvn/settings.xml
    - echo '          <url>https://dl.bintray.com/daggerok/daggerok</url>                                                       ' >> .mvn/settings.xml
    - echo '        </repository>                                                                                               ' >> .mvn/settings.xml
    - echo '      </repositories>                                                                                               ' >> .mvn/settings.xml
    - echo '      <pluginRepositories>                                                                                          ' >> .mvn/settings.xml
    - echo '        <pluginRepository>                                                                                          ' >> .mvn/settings.xml
    - echo '          <snapshots><enabled>false</enabled></snapshots>                                                           ' >> .mvn/settings.xml
    - echo '          <id>bintray-daggerok-daggerok</id>                                                                        ' >> .mvn/settings.xml
    - echo '          <name>bintray-plugins</name>                                                                              ' >> .mvn/settings.xml
    - echo '          <url>https://dl.bintray.com/daggerok/daggerok</url>                                                       ' >> .mvn/settings.xml
    - echo '        </pluginRepository>                                                                                         ' >> .mvn/settings.xml
    - echo '      </pluginRepositories>                                                                                         ' >> .mvn/settings.xml
    - echo '      <id>bintray</id>                                                                                              ' >> .mvn/settings.xml
    - echo '</profile></profiles>                                                                                               ' >> .mvn/settings.xml
    - echo '<activeProfiles><activeProfile>bintray</activeProfile></activeProfiles>                                             ' >> .mvn/settings.xml
    - echo '<servers><server>                                                                                                   ' >> .mvn/settings.xml
    - echo '  <id>bintray-daggerok-daggerok</id>                                                                                ' >> .mvn/settings.xml
    - echo '  <username>daggerok</username>                                                                                     ' >> .mvn/settings.xml
    - echo "  <password>${BINTRAY_API_KEY}</password>                                                                           " >> .mvn/settings.xml
    - echo '</server><server>                                                                                                   ' >> .mvn/settings.xml
    - echo '  <id>github</id>                                                                                                   ' >> .mvn/settings.xml
    - echo '  <username>daggerok</username>                                                                                     ' >> .mvn/settings.xml
    - echo "  <password>${GITHUB_PASSWORD}</password>                                                                           " >> .mvn/settings.xml
    - echo '</server>                                                                                                           ' >> .mvn/settings.xml
    - echo '</servers>                                                                                                          ' >> .mvn/settings.xml
    - echo '</settings>                                                                                                         ' >> .mvn/settings.xml
    #
    - ./mvnw -pl :docs -P gh-pages
    deploy:
    #- provider: script
    #  skip_cleanup: true
    #  script: bash -c './bin/local-release.sh'
    - provider: pages
      skip-cleanup: true
      keep-history: true
      target_branch: gh-pages
      github-token: "$GITHUB_TOKEN"
      # travis encrypt GITHUB_TOKEN=<your github repo token> --add
      local-dir: ./docs/.vuepress/dist
stages:
- test
- deploy
