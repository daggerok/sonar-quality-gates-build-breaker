notifications:
  email: false
git:
  quiet: true
  depth: 1
env:
  global:
  - TERM=dumb
  - secure: "rIwWxoiWIKX3QWonh4qUgDtl+eaW9Uax15qg0jQ2Vu0l2aD9d3yZRuRtlo1f9n0kwGKIIvs0TZl+wT1cN1d7ELxWO6/X9KLN0clOiHX4QIdmO6mQIxXAK3dBAxcaC6Or7MwRovQdnSrcm1TMyHFgbYmPW614zNNcHVID47uJ7+/8Tn9owPLdVJ4RT2S4Qy+j/egOZjcT+EFM/9I/ph96w2OlScGEYxn4CZyDO9YsAd0uxKFH6Xqpswo0ccQe5lK6hP8Q19/JTdTYicFtUQ2N/fQ5YEnQITv8HB5rfI4gSBSVx1bvpykKw6iuPL++st7k8rYaZHSfgHrEDUsDTTsyb6YpfnsNTbBz2aH18eE1E9MLUIT1OQsERusYAYOnHT4S5OI83icD5c8chIzGBzeBi8z0kwueeMSlKsr2rKYoUNioLL+YHEOzjVz7H1AP3D3BHSEd6XUrePVbvMD/ZcDY2k1y48A/QF8cHuZNaycVF3lOS/1aKk1okDPafsaVHglfsC353WWs28Cm5lkj3bctUnedQsZLVY74k7dd9YLwjpKIjmd3+sbD8yrlkvXpJoyz5DK/IlWMcrUEfy9R3fNudEdmQKAWHXfECRrpqxAgQqD/yexiVrP9rNrhsy5len1vHezxUmGaKxSoNdozoIZ04sNeoVhn+VLYaUp4zyPFtk4="
language: java
services: docker
addons:
  apt:
    update: true
    packages:
    - sudo
    - lsof
    - curl
    - pigz
    - docker-ce
install: true
before_install:
#- source <(curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash)
- |
  if [ ! -f $HOME/.local/daggerok/bash-functions/master/main.bash ] ; then
    mkdir -p $HOME/.local/daggerok/bash-functions/master ;
    curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash > $HOME/.local/daggerok/bash-functions/master/main.bash ;
  fi
  source $HOME/.local/daggerok/bash-functions/master/main.bash ;
- stop_any 80 8080 9000
#- docker-compose -v
- |
  if [[ ! -f $HOME/.local/bin/docker-compose ]] ; then
    rm -rf $HOME/.local/bin ;
    mkdir -p $HOME/.local/bin ;
    curl -L https://github.com/docker/compose/releases/download/1.25.0-rc2/docker-compose-`uname -s`-`uname -m` -o $HOME/.local/bin/docker-compose ;
    chmod +x $HOME/.local/bin/docker-compose
    export PATH=$HOME/.local/bin:$PATH
    docker-compose -v
  fi
#before_cache:
#- find ~/.gradle -name '*.lock' -type f             -print0 | xargs -0 sudo rm -rfv '{}'
#- find ~/.gradle -name 'plugin-resolution' -type d  -print0 | xargs -0 sudo rm -rfv '{}'
cache:
  pip: true
  packages: true
  directories:
  - ./target/node
  - ./docs/node_modules
  - ~/.local/daggerok
  - ~/.local/bin
  - ~/.docker
  - ~/.m2
jobs:
  include:
  - stage: test
    jdk: openjdk8
    name: test openjdk8
    script:
    - cd $TRAVIS_BUILD_DIR && ./mvnw -pl :docker docker-compose:up
    - ./mvnw -U >/dev/null
    - wait_healthy_docker_containers 1
    - echo wait a half of minute while sonarQube is selfconfiguring...
    - sleep 40s
    - cd $TRAVIS_BUILD_DIR && ./mvnw -P sonar
    - java -jar $TRAVIS_BUILD_DIR/sonar-breaker/target/*-all.jar $TRAVIS_BUILD_DIR/target/sonar/report-task.txt
    after_script:
    - cd $TRAVIS_BUILD_DIR && ./mvnw -pl :docker docker-compose:down
  - stage: test
    jdk: openjdk8
    name: display-property-updates openjdk8
    script: cd $TRAVIS_BUILD_DIR && ./mvnw versions:display-property-updates -U
  - stage: test
    jdk: openjdk11
    name: test openjdk11
    script:
    - cd $TRAVIS_BUILD_DIR && ./mvnw -pl :docker docker-compose:up
    - ./mvnw -U >/dev/null
    - wait_healthy_docker_containers 1
    - echo wait a half of minute while sonarQube is selfconfiguring...
    - sleep 40s
    - ./mvnw -P sonar ; java -jar ./sonar-breaker/target/*-all.jar ./target/sonar/report-task.txt || echo 'expected...'
    after_script:
    - cd $TRAVIS_BUILD_DIR && ./mvnw -pl :docker docker-compose:down
  - stage: test
    jdk: openjdk11
    name: display-property-updates openjdk11
    script: cd $TRAVIS_BUILD_DIR && ./mvnw versions:display-property-updates -U
  - stage: deploy
    jdk: openjdk8
    rvm: 2.6.4
    name: Deploy VuePress documentation on GitHub Pages
    script: skip
    before_deploy: ./mvnw -pl :docs -P gh-pages
    deploy:
      provider: pages
      skip-cleanup: true
      # travis encrypt GITHUB_TOKEN=<your github repo token> --add
      github-token: "$GITHUB_TOKEN"
      keep-history: true
      on:
        branch: master
        condition: "$TRAVIS_PULL_REQUEST = false"
      local-dir: ./docs/.vuepress/dist
      target_branch: gh-pages
stages:
- test
- deploy
